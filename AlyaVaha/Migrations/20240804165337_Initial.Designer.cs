// <auto-generated />
using System;
using AlyaVaha.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlyaVaha.Migrations
{
    [DbContext(typeof(AlyaVahaDbContext))]
    [Migration("20240804165337_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlyaVaha.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumUpravy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumVytvorenia")
                        .HasColumnType("datetime2");

                    b.Property<double?>("HmotnostMaterialu")
                        .HasColumnType("float");

                    b.Property<bool?>("JeAktivny")
                        .HasColumnType("bit");

                    b.Property<string>("NazovMaterialu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materialy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumUpravy = new DateTime(2024, 8, 4, 18, 53, 37, 397, DateTimeKind.Local).AddTicks(868),
                            DatumVytvorenia = new DateTime(2024, 8, 4, 18, 53, 37, 397, DateTimeKind.Local).AddTicks(865),
                            HmotnostMaterialu = 100.0,
                            JeAktivny = true,
                            NazovMaterialu = "Materiál 1"
                        },
                        new
                        {
                            Id = 2,
                            DatumUpravy = new DateTime(2024, 8, 4, 18, 53, 37, 397, DateTimeKind.Local).AddTicks(876),
                            DatumVytvorenia = new DateTime(2024, 8, 4, 18, 53, 37, 397, DateTimeKind.Local).AddTicks(875),
                            HmotnostMaterialu = 200.0,
                            JeAktivny = true,
                            NazovMaterialu = "Materiál 2"
                        });
                });

            modelBuilder.Entity("AlyaVaha.Models.Navazovanie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CasKonca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasStartu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatumKonca")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumStartu")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KamId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.Property<double?>("NavazeneMnozstvo")
                        .HasColumnType("float");

                    b.Property<int?>("NavazenyPocetDavok")
                        .HasColumnType("int");

                    b.Property<int?>("OdkialId")
                        .HasColumnType("int");

                    b.Property<double?>("PozadovaneMnozstvo")
                        .HasColumnType("float");

                    b.Property<int?>("PozadovanyPocetDavok")
                        .HasColumnType("int");

                    b.Property<int?>("UzivatelId")
                        .HasColumnType("int");

                    b.Property<double?>("VelkostDavky")
                        .HasColumnType("float");

                    b.Property<int?>("ZariadenieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KamId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("OdkialId");

                    b.HasIndex("UzivatelId");

                    b.HasIndex("ZariadenieId");

                    b.ToTable("Navazovania");
                });

            modelBuilder.Entity("AlyaVaha.Models.Uzivatel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumUpravy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumVytvorenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Heslo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("JeAdmin")
                        .HasColumnType("bit");

                    b.Property<bool?>("JeAktivny")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uzivatelia");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumUpravy = new DateTime(2024, 8, 4, 18, 53, 37, 397, DateTimeKind.Local).AddTicks(847),
                            DatumVytvorenia = new DateTime(2024, 8, 4, 18, 53, 37, 397, DateTimeKind.Local).AddTicks(769),
                            Heslo = "alya123456",
                            JeAdmin = true,
                            JeAktivny = true,
                            Login = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            DatumUpravy = new DateTime(2024, 8, 4, 18, 53, 37, 397, DateTimeKind.Local).AddTicks(852),
                            DatumVytvorenia = new DateTime(2024, 8, 4, 18, 53, 37, 397, DateTimeKind.Local).AddTicks(851),
                            Heslo = "obsluha123",
                            JeAdmin = false,
                            JeAktivny = true,
                            Login = "Obsluha"
                        });
                });

            modelBuilder.Entity("AlyaVaha.Models.Zariadenie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IpAdresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NavazeneMnozstvo")
                        .HasColumnType("float");

                    b.Property<int>("NavazenyPocetDavok")
                        .HasColumnType("int");

                    b.Property<string>("NazovZariadenia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PocetNavazeni")
                        .HasColumnType("int");

                    b.Property<int?>("Port")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Zariadenia");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IpAdresa = "192.168.1.10",
                            NavazeneMnozstvo = 0.0,
                            NavazenyPocetDavok = 0,
                            NazovZariadenia = "Váha 1",
                            PocetNavazeni = 0,
                            Port = 3396
                        });
                });

            modelBuilder.Entity("AlyaVaha.Models.Zasobnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("CestaDoVahy")
                        .HasColumnType("bit");

                    b.Property<bool?>("CestaZVahy")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DatumUpravy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumVytvorenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("NazovZasobnika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skratka")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zasobniky");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CestaDoVahy = true,
                            CestaZVahy = true,
                            DatumUpravy = new DateTime(2024, 8, 4, 18, 53, 37, 397, DateTimeKind.Local).AddTicks(885),
                            DatumVytvorenia = new DateTime(2024, 8, 4, 18, 53, 37, 397, DateTimeKind.Local).AddTicks(882),
                            NazovZasobnika = "Zásobník 1",
                            Skratka = "Z1"
                        },
                        new
                        {
                            Id = 2,
                            CestaDoVahy = true,
                            CestaZVahy = true,
                            DatumUpravy = new DateTime(2024, 8, 4, 18, 53, 37, 397, DateTimeKind.Local).AddTicks(888),
                            DatumVytvorenia = new DateTime(2024, 8, 4, 18, 53, 37, 397, DateTimeKind.Local).AddTicks(887),
                            NazovZasobnika = "Zásobník 2",
                            Skratka = "Z2"
                        },
                        new
                        {
                            Id = 3,
                            CestaDoVahy = true,
                            CestaZVahy = true,
                            DatumUpravy = new DateTime(2024, 8, 4, 18, 53, 37, 397, DateTimeKind.Local).AddTicks(890),
                            DatumVytvorenia = new DateTime(2024, 8, 4, 18, 53, 37, 397, DateTimeKind.Local).AddTicks(889),
                            NazovZasobnika = "Zásobník 3",
                            Skratka = "Z3"
                        });
                });

            modelBuilder.Entity("AlyaVaha.Models.Navazovanie", b =>
                {
                    b.HasOne("AlyaVaha.Models.Zasobnik", "Kam")
                        .WithMany()
                        .HasForeignKey("KamId");

                    b.HasOne("AlyaVaha.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.HasOne("AlyaVaha.Models.Zasobnik", "Odkial")
                        .WithMany()
                        .HasForeignKey("OdkialId");

                    b.HasOne("AlyaVaha.Models.Uzivatel", "Uzivatel")
                        .WithMany()
                        .HasForeignKey("UzivatelId");

                    b.HasOne("AlyaVaha.Models.Zariadenie", "Zariadenie")
                        .WithMany()
                        .HasForeignKey("ZariadenieId");

                    b.Navigation("Kam");

                    b.Navigation("Material");

                    b.Navigation("Odkial");

                    b.Navigation("Uzivatel");

                    b.Navigation("Zariadenie");
                });
#pragma warning restore 612, 618
        }
    }
}
