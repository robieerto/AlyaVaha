// <auto-generated />
using System;
using AlyaVaha.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlyaVaha.Migrations
{
    [DbContext(typeof(AlyaVahaDbContext))]
    [Migration("20240619085101_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlyaVaha.Models.Cesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumUpravy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumVytvorenia")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DoVahy")
                        .HasColumnType("bit");

                    b.Property<bool?>("ZVahy")
                        .HasColumnType("bit");

                    b.Property<int?>("ZariadenieId")
                        .HasColumnType("int");

                    b.Property<int?>("ZasobnikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZariadenieId");

                    b.HasIndex("ZasobnikId");

                    b.ToTable("Cesty");
                });

            modelBuilder.Entity("AlyaVaha.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumUpravy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumVytvorenia")
                        .HasColumnType("datetime2");

                    b.Property<double?>("HmotnostMaterialu")
                        .HasColumnType("float");

                    b.Property<string>("NazovMaterialu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materialy");
                });

            modelBuilder.Entity("AlyaVaha.Models.Navazovanie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CasKonca")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CasStartu")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KamId")
                        .HasColumnType("int");

                    b.Property<double?>("NavazeneMnozstvo")
                        .HasColumnType("float");

                    b.Property<int?>("NavazenyPocetDavok")
                        .HasColumnType("int");

                    b.Property<int?>("OdkialId")
                        .HasColumnType("int");

                    b.Property<double?>("PozadovaneMnozstvo")
                        .HasColumnType("float");

                    b.Property<int?>("PozadovanyPocetDavok")
                        .HasColumnType("int");

                    b.Property<int?>("UzivatelId")
                        .HasColumnType("int");

                    b.Property<double?>("VelkostDavky")
                        .HasColumnType("float");

                    b.Property<int?>("ZariadenieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KamId");

                    b.HasIndex("OdkialId");

                    b.HasIndex("UzivatelId");

                    b.HasIndex("ZariadenieId");

                    b.ToTable("Navazovania");
                });

            modelBuilder.Entity("AlyaVaha.Models.Uzivatel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Heslo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("JeAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uzivatelia");
                });

            modelBuilder.Entity("AlyaVaha.Models.Zariadenie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IpAdresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazovZariadenia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Port")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Zariadenia");
                });

            modelBuilder.Entity("AlyaVaha.Models.Zasobnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DatumUpravy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumVytvorenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("NazovZasobnika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skratka")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zasobniky");
                });

            modelBuilder.Entity("AlyaVaha.Models.Cesta", b =>
                {
                    b.HasOne("AlyaVaha.Models.Zariadenie", "Zariadenie")
                        .WithMany()
                        .HasForeignKey("ZariadenieId");

                    b.HasOne("AlyaVaha.Models.Zasobnik", "Zasobnik")
                        .WithMany()
                        .HasForeignKey("ZasobnikId");

                    b.Navigation("Zariadenie");

                    b.Navigation("Zasobnik");
                });

            modelBuilder.Entity("AlyaVaha.Models.Navazovanie", b =>
                {
                    b.HasOne("AlyaVaha.Models.Zasobnik", "Kam")
                        .WithMany()
                        .HasForeignKey("KamId");

                    b.HasOne("AlyaVaha.Models.Zasobnik", "Odkial")
                        .WithMany()
                        .HasForeignKey("OdkialId");

                    b.HasOne("AlyaVaha.Models.Uzivatel", "Uzivatel")
                        .WithMany()
                        .HasForeignKey("UzivatelId");

                    b.HasOne("AlyaVaha.Models.Zariadenie", "Zariadenie")
                        .WithMany()
                        .HasForeignKey("ZariadenieId");

                    b.Navigation("Kam");

                    b.Navigation("Odkial");

                    b.Navigation("Uzivatel");

                    b.Navigation("Zariadenie");
                });
#pragma warning restore 612, 618
        }
    }
}
